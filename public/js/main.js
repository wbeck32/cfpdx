function findNearBeer(){var e=$("div.wrapper").attr("lat"),a=$("div.wrapper").attr("lng");$.getJSON("/findNearBeer/"+e+"/"+a,function(e){$.each(e,function(e,a){if("data"===e)for(var r,n=0;n<10;n++)r=void 0!==a[n].brewery.images?a[n].brewery.images.icon:"../images/beer.png",$("<div/>").attr("id",a[n].brewery.id).addClass("breweryItem").html('<span class="icon"><img src="'+r+'"></span>').append('<div class="breweryName">'+a[n].brewery.name+"</div>").append('<div class="breweryAddress">'+a[n].streetAddress+"</div>").append('<div class="breweryPhone">'+a[n].phone+"</div>").appendTo(".beerData"),$(".breweryItem#"+a[n].brewery.id).before('<div class="toggle" id="'+a[n].brewery.id+'">Show/hide beers</div>')})})}function makeBeerList(e){$.getJSON("/brewery/"+e+"/beers",function(e){}).done(function(a){var r=$("<div class='breweryBeers'></div>").attr("id",e);a.data?($(".breweryItem#"+e).after(r),$.each(a.data,function(e,n){var t=$("<div/>").attr("id",a.data[e].id).addClass("findById").append('<span class="displayName">'+a.data[e].nameDisplay+"</span>").append('<span class="abv">'+a.data[e].abv+"</span>");r.append(t)})):($(".breweryItem#"+e).after(r),r.append("<div>Sorry, no beer data available for this brewery.</div>"))})}function findMe(){navigator.geolocation?navigator.geolocation.getCurrentPosition(function(e){var a={lat:e.coords.latitude,lng:e.coords.longitude};fetch("https://maps.googleapis.com/maps/api/geocode/json?latlng="+a.lat+","+a.lng+"&key=AIzaSyDK--2y9KY9N_bTw1WY1qSB0ub_4kuCbmk").then(function(e){return e.json()}).then(function(e){$(".wrapper").attr({lat:a.lat,lng:a.lng}),$(".loader").addClass("locationFound"),$(".loader").remove(),$(".display").css("visibility","visible"),findNearBeer();var r={lat:a.lat,lng:a.lng};map=new google.maps.Map(document.getElementById("map"),{center:r,zoom:15}),marker=new google.maps.Marker({position:r,map:map})}).catch(function(e){console.log(e)})},function(){handleLocationError(!0,infoWindow,map.getCenter())}):handleLocationError(!1,infoWindow,map.getCenter())}function handleLocationError(e,a,r){a.setPosition(r),a.setContent(e?"Error: The Geolocation service failed.":"Error: Your browser doesn't support geolocation."),a.open(map)}$(".beerData").on("click",".toggle",function(){var e=$(this).attr("id");$(".beerData .breweryBeers#"+e).length>0?$(".beerData .breweryBeers#"+e).remove():($(".breweryBeers").not(".breweryBeers#"+e).remove(),makeBeerList(e))}),$(".beerData").on("click",".findById",function(){var e=$(this).attr("id");$(".beerInfo").remove(),$.getJSON("/beer/"+e,function(e){$.each(e,function(e,a){if("data"===e){var r=$('<div class="beerInfo"/>').attr("id",a.id).html("<div>Info about this beer!</div>");$(".findById#"+a.id).after(r)}})})});var map,marker,infoWindow;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpc3BsYXkuanMiLCJtYXBzLmpzIl0sIm5hbWVzIjpbImZpbmROZWFyQmVlciIsImxhdCIsIiQiLCJhdHRyIiwibG5nIiwiZ2V0SlNPTiIsImRhdGEiLCJlYWNoIiwia2V5IiwidmFsIiwiaWNvbiIsIm0iLCJ1bmRlZmluZWQiLCJicmV3ZXJ5IiwiaW1hZ2VzIiwiaWQiLCJhZGRDbGFzcyIsImh0bWwiLCJhcHBlbmQiLCJuYW1lIiwic3RyZWV0QWRkcmVzcyIsInBob25lIiwiYXBwZW5kVG8iLCJiZWZvcmUiLCJtYWtlQmVlckxpc3QiLCJicmV3ZXJ5SWQiLCJkb25lIiwiYmVlckxpc3QiLCJhZnRlciIsInZhbHVlIiwiYmVlckluZm8iLCJuYW1lRGlzcGxheSIsImFidiIsImZpbmRNZSIsIm5hdmlnYXRvciIsImdlb2xvY2F0aW9uIiwiZ2V0Q3VycmVudFBvc2l0aW9uIiwicG9zaXRpb24iLCJwb3MiLCJjb29yZHMiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsImZldGNoIiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsInJlbW92ZSIsImNzcyIsImNlbnRlciIsIm1hcCIsImdvb2dsZSIsIm1hcHMiLCJNYXAiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiem9vbSIsIm1hcmtlciIsIk1hcmtlciIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiaGFuZGxlTG9jYXRpb25FcnJvciIsImluZm9XaW5kb3ciLCJnZXRDZW50ZXIiLCJicm93c2VySGFzR2VvbG9jYXRpb24iLCJzZXRQb3NpdGlvbiIsInNldENvbnRlbnQiLCJvcGVuIiwib24iLCJ0aGlzIiwibGVuZ3RoIiwibm90IiwiYmVlcklkIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFBQSxlQUNBLElBQUFDLEVBQUFDLEVBQUEsZUFBQUMsS0FBQSxPQUNBQyxFQUFBRixFQUFBLGVBQUFDLEtBQUEsT0FDQUQsRUFBQUcsUUFBQSxpQkFBQUosRUFBQSxJQUFBRyxFQUFBLFNBQUFFLEdBQ0FK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LGFBQUFtRSxHQUFBLFFBQUEsWUFBQSxXQUNBLElBQUFJLEVBQUF2RSxFQUFBb0UsTUFBQW5FLEtBQUEsTUFDQUQsRUFBQSxhQUFBNEMsU0FDQTVDLEVBQUFHLFFBQUEsU0FBQW9FLEVBQUEsU0FBQW5FLEdBQ0FKLEVBQUFLLEtBQUFELEVBQUEsU0FBQUUsRUFBQUMsR0FDQSxHQUFBLFNBQUFELEVBQUEsQ0FDQSxJQUFBc0IsRUFBQTVCLEVBQUEsMkJBQ0FDLEtBQUEsS0FBQU0sRUFBQU0sSUFDQUUsS0FBQSxvQ0FDQWYsRUFBQSxhQUFBTyxFQUFBTSxJQUFBYSxNQUFBRSxVQy9DQSxJQUFBbUIsSUFBQU8sT0FBQU8iLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGZpbmROZWFyQmVlcigpIHtcbiAgdmFyIGxhdCA9ICQoJ2Rpdi53cmFwcGVyJykuYXR0cignbGF0Jyk7XG4gIHZhciBsbmcgPSAkKCdkaXYud3JhcHBlcicpLmF0dHIoJ2xuZycpO1xuICAkLmdldEpTT04oIFwiL2ZpbmROZWFyQmVlci9cIitsYXQrXCIvXCIrbG5nLCBmdW5jdGlvbiggZGF0YSApIHtcbiAgICAkLmVhY2goIGRhdGEsIGZ1bmN0aW9uKCBrZXksIHZhbCApIHtcbiAgICAgICAgaWYoa2V5ID09PSAnZGF0YScpIHtcbiAgICAgICAgdmFyIGljb247XG4gICAgICAgIGZvciAodmFyIG0gPSAwOyBtIDwgMTA7IG0rKykge1xuICAgICAgICAgIGlmKHZhbFttXS5icmV3ZXJ5LmltYWdlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpY29uID0gdmFsW21dLmJyZXdlcnkuaW1hZ2VzLmljb247XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGljb24gPSAnLi4vaW1hZ2VzL2JlZXIucG5nJztcbiAgICAgICAgICB9XG4gICAgICAgICAgJCgnPGRpdi8+JylcbiAgICAgICAgICAgICAgLmF0dHIoJ2lkJyx2YWxbbV0uYnJld2VyeS5pZClcbiAgICAgICAgICAgICAgLmFkZENsYXNzKCdicmV3ZXJ5SXRlbScpXG4gICAgICAgICAgICAgIC5odG1sKCc8c3BhbiBjbGFzcz1cImljb25cIj48aW1nIHNyYz1cIicraWNvbisnXCI+PC9zcGFuPicpXG4gICAgICAgICAgICAgIC5hcHBlbmQoJzxkaXYgY2xhc3M9XCJicmV3ZXJ5TmFtZVwiPicrdmFsW21dLmJyZXdlcnkubmFtZSsnPC9kaXY+JylcbiAgICAgICAgICAgICAgLmFwcGVuZCgnPGRpdiBjbGFzcz1cImJyZXdlcnlBZGRyZXNzXCI+Jyt2YWxbbV0uc3RyZWV0QWRkcmVzcysnPC9kaXY+JylcbiAgICAgICAgICAgICAgLmFwcGVuZCgnPGRpdiBjbGFzcz1cImJyZXdlcnlQaG9uZVwiPicrdmFsW21dLnBob25lKyc8L2Rpdj4nKVxuICAgICAgICAgICAgICAuYXBwZW5kVG8oJy5iZWVyRGF0YScpO1xuICAgICAgICAgICAgICAkKCcuYnJld2VyeUl0ZW0jJyt2YWxbbV0uYnJld2VyeS5pZCkuYmVmb3JlKCc8ZGl2IGNsYXNzPVwidG9nZ2xlXCIgaWQ9XCInK3ZhbFttXS5icmV3ZXJ5LmlkKydcIj5TaG93L2hpZGUgYmVlcnM8L2Rpdj4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59XG5cbiQoJy5iZWVyRGF0YScpLm9uKCdjbGljaycsICcudG9nZ2xlJywgZnVuY3Rpb24oKXsgXG4gIHZhciBicmV3ZXJ5SWQgPSAkKHRoaXMpLmF0dHIoJ2lkJyk7XG4gIGlmKCQoJy5iZWVyRGF0YSAuYnJld2VyeUJlZXJzIycrYnJld2VyeUlkKS5sZW5ndGggPiAwKSB7XG4gICAgJCgnLmJlZXJEYXRhIC5icmV3ZXJ5QmVlcnMjJyticmV3ZXJ5SWQpLnJlbW92ZSgpO1xuICB9IGVsc2Uge1xuICAgICQoJy5icmV3ZXJ5QmVlcnMnKS5ub3QoJy5icmV3ZXJ5QmVlcnMjJyticmV3ZXJ5SWQpLnJlbW92ZSgpO1xuICAgIG1ha2VCZWVyTGlzdChicmV3ZXJ5SWQpO1xuICB9XG59KTtcblxuJCgnLmJlZXJEYXRhJykub24oJ2NsaWNrJywgJy5maW5kQnlJZCcsIGZ1bmN0aW9uKCl7XG4gIHZhciBiZWVySWQgPSAkKHRoaXMpLmF0dHIoJ2lkJyk7XG4gICQoJy5iZWVySW5mbycpLnJlbW92ZSgpO1xuICAkLmdldEpTT04oIFwiL2JlZXIvXCIrYmVlcklkLCBmdW5jdGlvbiggZGF0YSApIHtcbiAgICAkLmVhY2goIGRhdGEsIGZ1bmN0aW9uKCBrZXksIHZhbCApIHtcbiAgICAgIGlmKGtleSA9PT0gJ2RhdGEnKSB7XG4gICAgICAgICAgdmFyIGJlZXJJbmZvID0gJCgnPGRpdiBjbGFzcz1cImJlZXJJbmZvXCIvPicpXG4gICAgICAgICAgICAuYXR0cignaWQnLHZhbC5pZClcbiAgICAgICAgICAgIC5odG1sKCc8ZGl2PkluZm8gYWJvdXQgdGhpcyBiZWVyITwvZGl2PicpO1xuICAgICAgICAgICAgJCgnLmZpbmRCeUlkIycrdmFsLmlkKS5hZnRlcihiZWVySW5mbyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufSk7XG5cbi8vICQoJy5iZWVyRGF0YScpLm9uKCdjbGljaycsICcuYnJld2VyeUl0ZW0nLCBmdW5jdGlvbigpe1xuLy8gICB2YXIgYnJld2VyeUlkID0gJCh0aGlzKS5hdHRyKCdpZCcpO1xuLy8gICAkKCcuYnJld2VyeUJlZXJzJykubm90KCcuYnJld2VyeUJlZXJzIycrYnJld2VyeUlkKS5yZW1vdmUoKTtcbiAgICAvLyBUT0RPOiBkcm9wIGEgbWFya2VyIGZvciB0aGUgYnJld2VyeSBsb2NhdGlvbiwgcHJvdmlkZSBkaXJlY3Rpb24gc2VydmljZVxuICAgIC8vIHZhciBsYXQgPSAkKCdkaXYud3JhcHBlcicpLmF0dHIoJ2xhdCcpO1xuICAgIC8vIHZhciBsbmcgPSAkKCdkaXYud3JhcHBlcicpLmF0dHIoJ2xuZycpO1xuICAgIC8vIHZhciBsb2NhdGlvbiA9IHsnbGF0JyA6IHBhcnNlRmxvYXQobGF0KSwgJ2xuZycgOiBwYXJzZUZsb2F0KGxuZyl9O1xuICAgIC8vIHZhciBteU1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgIC8vICAgcG9zaXRpb246IGxvY2F0aW9uLFxuICAgIC8vICAgbWFwOiBtYXBcbiAgICAvLyB9KTtcbiAgLy8gfSk7XG5mdW5jdGlvbiBtYWtlQmVlckxpc3QoYnJld2VyeUlkKSB7XG4gICAgJC5nZXRKU09OKCBcIi9icmV3ZXJ5L1wiK2JyZXdlcnlJZCtcIi9iZWVyc1wiLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZygnc3VjY2VzcycpO1xuICAgICAgfSlcbiAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgdmFyIGJlZXJMaXN0ID0gJChcIjxkaXYgY2xhc3M9J2JyZXdlcnlCZWVycyc+PC9kaXY+XCIpXG4gICAgICAgICAgICAuYXR0cignaWQnLCBicmV3ZXJ5SWQpO1xuICAgICAgaWYoZGF0YS5kYXRhKSB7XG4gICAgICAgICAgICAkKCcuYnJld2VyeUl0ZW0jJyticmV3ZXJ5SWQpLmFmdGVyKGJlZXJMaXN0KTtcbiAgICAgICAgJC5lYWNoKGRhdGEuZGF0YSwgZnVuY3Rpb24oa2V5LCB2YWx1ZSl7XG4gICAgICAgICAgdmFyIGJlZXJJbmZvID0gJCgnPGRpdi8+JylcbiAgICAgICAgICAgICAgLmF0dHIoJ2lkJywgZGF0YS5kYXRhW2tleV0uaWQpXG4gICAgICAgICAgICAgIC5hZGRDbGFzcygnZmluZEJ5SWQnKVxuICAgICAgICAgICAgICAuYXBwZW5kKCc8c3BhbiBjbGFzcz1cImRpc3BsYXlOYW1lXCI+JytkYXRhLmRhdGFba2V5XS5uYW1lRGlzcGxheSsnPC9zcGFuPicpXG4gICAgICAgICAgICAgIC5hcHBlbmQoJzxzcGFuIGNsYXNzPVwiYWJ2XCI+JytkYXRhLmRhdGFba2V5XS5hYnYrJzwvc3Bhbj4nKTtcbiAgICAgICAgICAgICAgYmVlckxpc3QuYXBwZW5kKGJlZXJJbmZvKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICQoJy5icmV3ZXJ5SXRlbSMnK2JyZXdlcnlJZCkuYWZ0ZXIoYmVlckxpc3QpO1xuICAgICAgICAgICAgYmVlckxpc3QuYXBwZW5kKCc8ZGl2PlNvcnJ5LCBubyBiZWVyIGRhdGEgYXZhaWxhYmxlIGZvciB0aGlzIGJyZXdlcnkuPC9kaXY+Jyk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbiIsInZhciBtYXAsIG1hcmtlciwgaW5mb1dpbmRvdztcbmZ1bmN0aW9uIGZpbmRNZSgpIHtcbiAgIC8vIFRyeSBIVE1MNSBnZW9sb2NhdGlvbi5cbiAgIGlmIChuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHtcbiAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihmdW5jdGlvbihwb3NpdGlvbikge1xuICAgICAgIHZhciBwb3MgPSB7XG4gICAgICAgICBsYXQ6IHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZSxcbiAgICAgICAgIGxuZzogcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZVxuICAgICAgIH07XG4gICAgICAgZmV0Y2goJ2h0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9nZW9jb2RlL2pzb24/bGF0bG5nPScrcG9zLmxhdCsnLCcrcG9zLmxuZysnJmtleT1BSXphU3lESy0tMnk5S1k5Tl9iVHcxV1kxcVNCMHViXzRrdUNibWsnKVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpOyB9KVxuICAgICAgICAudGhlbihmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgJCgnLndyYXBwZXInKS5hdHRyKHtcbiAgICAgICAgICAgICAgIGxhdCA6IHBvcy5sYXQsXG4gICAgICAgICAgICAgICBsbmcgOiBwb3MubG5nXG4gICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICQoJy5sb2FkZXInKS5hZGRDbGFzcygnbG9jYXRpb25Gb3VuZCcpO1xuICAgICAgICAgICAgICAkKCcubG9hZGVyJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICQoJy5kaXNwbGF5JykuY3NzKCd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKTtcbiAgICAgICAgICAgICAgZmluZE5lYXJCZWVyKCk7XG4gICAgICAgICAgICAgIHZhciBjZW50ZXIgPSB7J2xhdCc6IHBvcy5sYXQsICdsbmcnOiBwb3MubG5nfTtcbiAgICAgICAgICAgICAgIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcCcpLCB7XG4gICAgICAgICAgICAgICAgICBjZW50ZXI6IGNlbnRlcixcbiAgICAgICAgICAgICAgICAgIHpvb206IDE1XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICAgICAgICAgICAgICBwb3NpdGlvbjogY2VudGVyLFxuICAgICAgICAgICAgICAgICAgbWFwOiBtYXBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgIH0pXG4gICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgfSk7XG4gICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgIGhhbmRsZUxvY2F0aW9uRXJyb3IodHJ1ZSwgaW5mb1dpbmRvdywgbWFwLmdldENlbnRlcigpKTtcbiAgICAgfSk7XG4gICB9IGVsc2Uge1xuICAgICAvLyBCcm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBHZW9sb2NhdGlvblxuICAgICBoYW5kbGVMb2NhdGlvbkVycm9yKGZhbHNlLCBpbmZvV2luZG93LCBtYXAuZ2V0Q2VudGVyKCkpO1xuICAgfVxuIH1cblxuIGZ1bmN0aW9uIGhhbmRsZUxvY2F0aW9uRXJyb3IoYnJvd3Nlckhhc0dlb2xvY2F0aW9uLCBpbmZvV2luZG93LCBwb3MpIHtcbiAgIGluZm9XaW5kb3cuc2V0UG9zaXRpb24ocG9zKTtcbiAgIGluZm9XaW5kb3cuc2V0Q29udGVudChicm93c2VySGFzR2VvbG9jYXRpb24gP1xuICAgICAgICAgICAgICAgICAgICAgICAgICdFcnJvcjogVGhlIEdlb2xvY2F0aW9uIHNlcnZpY2UgZmFpbGVkLicgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICdFcnJvcjogWW91ciBicm93c2VyIGRvZXNuXFwndCBzdXBwb3J0IGdlb2xvY2F0aW9uLicpO1xuICAgaW5mb1dpbmRvdy5vcGVuKG1hcCk7XG4gfVxuIl19
